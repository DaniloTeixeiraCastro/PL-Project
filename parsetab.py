
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDAND AS CALL COMMA COMMENT CREATE DISCARD DO END EQUALS EXPORT FROM GT GTE ID IMPORT JOIN LIMIT LPAREN LT LTE MULTILINE_COMMENT NOTEQUALS NUMBER PRINT PROCEDURE RENAME RPAREN SELECT SEMICOLON STAR STRING TABLE USING WHEREprogram : statement_liststatement_list : statement\n                     | statement_list statementstatement : import_statement\n                | export_statement\n                | discard_statement\n                | rename_statement\n                | print_statement\n                | select_statement\n                | create_table_statement\n                | procedure_statement\n                | call_statementimport_statement : IMPORT TABLE ID FROM STRING SEMICOLONexport_statement : EXPORT TABLE ID AS STRING SEMICOLONdiscard_statement : DISCARD TABLE ID SEMICOLONrename_statement : RENAME TABLE ID ID SEMICOLONprint_statement : PRINT TABLE ID SEMICOLONselect_statement : SELECT select_list FROM ID where_clause limit_clause SEMICOLON\n                       | SELECT select_list FROM ID where_clause SEMICOLON\n                       | SELECT select_list FROM ID limit_clause SEMICOLON\n                       | SELECT select_list FROM ID SEMICOLONselect_list : STAR\n                  | column_listcolumn_list : ID\n                  | column_list COMMA IDwhere_clause : WHERE condition\n                   | emptycondition : ID comparison_operator value\n                | condition AND conditioncomparison_operator : EQUALS\n                          | NOTEQUALS\n                          | LT\n                          | GT\n                          | LTE\n                          | GTEvalue : NUMBER\n            | STRING\n            | IDlimit_clause : LIMIT NUMBER\n                   | emptycreate_table_statement : CREATE TABLE ID select_statement\n                             | CREATE TABLE ID FROM ID JOIN ID USING LPAREN ID RPAREN SEMICOLONprocedure_statement : PROCEDURE ID DO statement_list END SEMICOLONcall_statement : CALL ID SEMICOLONempty :'
    
_lr_action_items = {'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,22,43,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[13,13,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,13,-44,-15,-17,-41,13,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'EXPORT':([0,2,3,4,5,6,7,8,9,10,11,12,22,43,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[14,14,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,14,-44,-15,-17,-41,14,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'DISCARD':([0,2,3,4,5,6,7,8,9,10,11,12,22,43,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[15,15,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,15,-44,-15,-17,-41,15,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'RENAME':([0,2,3,4,5,6,7,8,9,10,11,12,22,43,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[16,16,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,16,-44,-15,-17,-41,16,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,22,43,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[17,17,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,17,-44,-15,-17,-41,17,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'SELECT':([0,2,3,4,5,6,7,8,9,10,11,12,22,42,43,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[18,18,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,18,18,-44,-15,-17,-41,18,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'CREATE':([0,2,3,4,5,6,7,8,9,10,11,12,22,43,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[19,19,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,19,-44,-15,-17,-41,19,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'PROCEDURE':([0,2,3,4,5,6,7,8,9,10,11,12,22,43,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[20,20,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,20,-44,-15,-17,-41,20,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'CALL':([0,2,3,4,5,6,7,8,9,10,11,12,22,43,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[21,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,21,-44,-15,-17,-41,21,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,22,44,47,49,52,57,60,66,67,69,71,76,77,96,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,-44,-15,-17,-41,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'END':([3,4,5,6,7,8,9,10,11,12,22,44,47,49,52,54,57,60,66,67,69,71,76,77,96,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-3,-44,-15,-17,-41,65,-16,-21,-13,-14,-19,-20,-43,-18,-42,]),'TABLE':([13,14,15,16,17,19,],[23,24,25,26,27,32,]),'STAR':([18,],[30,]),'ID':([18,20,21,23,24,25,26,27,32,38,40,41,53,61,75,78,79,80,81,82,83,84,85,93,],[29,33,34,35,36,37,38,39,42,48,50,51,64,73,86,73,88,-30,-31,-32,-33,-34,-35,94,]),'FROM':([28,29,30,31,35,42,51,],[40,-24,-22,-23,45,53,-25,]),'COMMA':([29,31,51,],[-24,41,-25,]),'DO':([33,],[43,]),'SEMICOLON':([34,37,39,48,50,55,56,58,59,62,65,68,70,72,74,87,88,89,90,91,95,],[44,47,49,57,60,66,67,69,71,-27,76,77,-40,-26,-39,-29,-38,-28,-36,-37,96,]),'AS':([36,],[46,]),'STRING':([45,46,79,80,81,82,83,84,85,],[55,56,91,-30,-31,-32,-33,-34,-35,]),'WHERE':([50,],[61,]),'LIMIT':([50,58,62,72,87,88,89,90,91,],[63,63,-27,-26,-29,-38,-28,-36,-37,]),'NUMBER':([63,79,80,81,82,83,84,85,],[74,90,-30,-31,-32,-33,-34,-35,]),'JOIN':([64,],[75,]),'AND':([72,87,88,89,90,91,],[78,-29,-38,-28,-36,-37,]),'EQUALS':([73,],[80,]),'NOTEQUALS':([73,],[81,]),'LT':([73,],[82,]),'GT':([73,],[83,]),'LTE':([73,],[84,]),'GTE':([73,],[85,]),'USING':([86,],[92,]),'LPAREN':([92,],[93,]),'RPAREN':([94,],[95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,43,],[2,54,]),'statement':([0,2,43,54,],[3,22,3,22,]),'import_statement':([0,2,43,54,],[4,4,4,4,]),'export_statement':([0,2,43,54,],[5,5,5,5,]),'discard_statement':([0,2,43,54,],[6,6,6,6,]),'rename_statement':([0,2,43,54,],[7,7,7,7,]),'print_statement':([0,2,43,54,],[8,8,8,8,]),'select_statement':([0,2,42,43,54,],[9,9,52,9,9,]),'create_table_statement':([0,2,43,54,],[10,10,10,10,]),'procedure_statement':([0,2,43,54,],[11,11,11,11,]),'call_statement':([0,2,43,54,],[12,12,12,12,]),'select_list':([18,],[28,]),'column_list':([18,],[31,]),'where_clause':([50,],[58,]),'limit_clause':([50,58,],[59,68,]),'empty':([50,58,],[62,70,]),'condition':([61,78,],[72,87,]),'comparison_operator':([73,],[79,]),'value':([79,],[89,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',16),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',21),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',22),
  ('statement -> import_statement','statement',1,'p_statement','parser.py',30),
  ('statement -> export_statement','statement',1,'p_statement','parser.py',31),
  ('statement -> discard_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> rename_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> select_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> create_table_statement','statement',1,'p_statement','parser.py',36),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> call_statement','statement',1,'p_statement','parser.py',38),
  ('import_statement -> IMPORT TABLE ID FROM STRING SEMICOLON','import_statement',6,'p_import_statement','parser.py',43),
  ('export_statement -> EXPORT TABLE ID AS STRING SEMICOLON','export_statement',6,'p_export_statement','parser.py',48),
  ('discard_statement -> DISCARD TABLE ID SEMICOLON','discard_statement',4,'p_discard_statement','parser.py',53),
  ('rename_statement -> RENAME TABLE ID ID SEMICOLON','rename_statement',5,'p_rename_statement','parser.py',58),
  ('print_statement -> PRINT TABLE ID SEMICOLON','print_statement',4,'p_print_statement','parser.py',63),
  ('select_statement -> SELECT select_list FROM ID where_clause limit_clause SEMICOLON','select_statement',7,'p_select_statement','parser.py',68),
  ('select_statement -> SELECT select_list FROM ID where_clause SEMICOLON','select_statement',6,'p_select_statement','parser.py',69),
  ('select_statement -> SELECT select_list FROM ID limit_clause SEMICOLON','select_statement',6,'p_select_statement','parser.py',70),
  ('select_statement -> SELECT select_list FROM ID SEMICOLON','select_statement',5,'p_select_statement','parser.py',71),
  ('select_list -> STAR','select_list',1,'p_select_list','parser.py',84),
  ('select_list -> column_list','select_list',1,'p_select_list','parser.py',85),
  ('column_list -> ID','column_list',1,'p_column_list','parser.py',90),
  ('column_list -> column_list COMMA ID','column_list',3,'p_column_list','parser.py',91),
  ('where_clause -> WHERE condition','where_clause',2,'p_where_clause','parser.py',99),
  ('where_clause -> empty','where_clause',1,'p_where_clause','parser.py',100),
  ('condition -> ID comparison_operator value','condition',3,'p_condition','parser.py',105),
  ('condition -> condition AND condition','condition',3,'p_condition','parser.py',106),
  ('comparison_operator -> EQUALS','comparison_operator',1,'p_comparison_operator','parser.py',115),
  ('comparison_operator -> NOTEQUALS','comparison_operator',1,'p_comparison_operator','parser.py',116),
  ('comparison_operator -> LT','comparison_operator',1,'p_comparison_operator','parser.py',117),
  ('comparison_operator -> GT','comparison_operator',1,'p_comparison_operator','parser.py',118),
  ('comparison_operator -> LTE','comparison_operator',1,'p_comparison_operator','parser.py',119),
  ('comparison_operator -> GTE','comparison_operator',1,'p_comparison_operator','parser.py',120),
  ('value -> NUMBER','value',1,'p_value','parser.py',125),
  ('value -> STRING','value',1,'p_value','parser.py',126),
  ('value -> ID','value',1,'p_value','parser.py',127),
  ('limit_clause -> LIMIT NUMBER','limit_clause',2,'p_limit_clause','parser.py',132),
  ('limit_clause -> empty','limit_clause',1,'p_limit_clause','parser.py',133),
  ('create_table_statement -> CREATE TABLE ID select_statement','create_table_statement',4,'p_create_table_statement','parser.py',138),
  ('create_table_statement -> CREATE TABLE ID FROM ID JOIN ID USING LPAREN ID RPAREN SEMICOLON','create_table_statement',12,'p_create_table_statement','parser.py',139),
  ('procedure_statement -> PROCEDURE ID DO statement_list END SEMICOLON','procedure_statement',6,'p_procedure_statement','parser.py',147),
  ('call_statement -> CALL ID SEMICOLON','call_statement',3,'p_call_statement','parser.py',153),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',158),
]
